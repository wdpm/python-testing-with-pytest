with mock.patch.object(cards, "CardsDB", autospec=True) as CardsDB:

保护了mock 的method调用的签名一致性。

---

使用 mock_cardsdb.add_card.assert_called_with(expected) 的 assert_called_with 保证正确调用了函数。

---

- For mocking database access, try pytest-postgresql, pytest-mongo, pytest-mysql,
and pytest-dynamodb.
- For mocking HTTP servers, try pytest-httpserver
- For mocking requests, try responses and betamax.
And there are even more tools, such as pytest-rabbitmq, pytest-solr, pytest-elasticsearch,
and pytest-redis

---

• Mock objects can simulate return values, raise exceptions, and record
how they were called.
• Using autospec=True when mocking objects, such as CardsDB, can help avoid
mock drift and make sure our use of the mock in tests is the same as the
API of the object being mocked.
• Return values can be simulated with mock_object.return_value = <new value>.
• Exceptions can be simulated with mock_object.side_effect = Exception

Mocking has some drawbacks, the most important of which is that using
mocks during testing means that you are testing implementation instead of
testing behavior.
Testing at multiple layers is one way of avoiding the need for mocking

---

注意这个练习：exercises/ch10/test_my_info.py

